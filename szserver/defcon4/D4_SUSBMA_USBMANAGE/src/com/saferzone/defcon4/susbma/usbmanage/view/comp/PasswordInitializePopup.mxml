<?xml version="1.0" encoding="utf-8"?>

<!---

comment

@version 0.001
@author CyD
@since Oct 12, 2011

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 2.6
@productversion Flex 4.5

-->
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:common="http://defcon4.saferzone.com/common"
			   creationComplete="onCreateCompleteHandler()"
			   controlBarVisible="true"
			   title="{DmosFramework.getInstance().SNL('SC_PASSWORD_INITIALIZE')}">

	<fx:Script>
		<![CDATA[

			import com.saferzone.defcon4.common.DmosFramework;
			
			import mx.utils.StringUtil;
			
			import spark.events.TextOperationEvent;
			
			
			[Bindable]
			public var isPwdVlidateDelete:Boolean = DmosFramework.getInstance().CONFIG("SUSB_USBMANAGE_INIT_PASSWORD_VALIDATE")=='1'?true:false;
			
			private var SaferZoneVersion:int = int(DmosFramework.getInstance().CONFIG("SAFERZONE_VERSION"))
				
			//------------------------------------------------------------------------------
			//
			// Properties #public 
			//
			//------------------------------------------------------------------------------
			
			public function get password():String
			{
				return StringUtil.trim(passwordRepeatInput.text);
			}
			
			//------------------------------------------------------------------------------
			//
			// Properties #private 
			//
			//------------------------------------------------------------------------------
			
			[Bindable]
			private var isPwdAvailable:Boolean = false;
			
			//------------------------------------------------------------------------------
			//
			// Methods 
			//
			//------------------------------------------------------------------------------
			
			//--------------------------------------
			// Event Handlers 
			//--------------------------------------
			
			protected function changePwd_changeHandler(event:TextOperationEvent):void
			{
				isPwdAvailable = passwordInput.text == passwordRepeatInput.text;
			}
			
			private function onCreateCompleteHandler():void
			{
				this.passwordInput.setFocus();
				
				if(isPwdVlidateDelete)
				{
					pwdConfirmValidator.source = null;
					accountPwdValidator.source = null;
					pwdConfirmValidator2.source = null;
					accountPwdValidator2.source = null;
				}
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<common:SZStringValidator id="pwdConfirmValidator" 
								  source="{passwordInput}" 
								  property="text" 
								  field="{SZStringValidator.PASSWORD}"
								  />
		
		<common:SZPasswordValidator id="accountPwdValidator" 
								  source="{passwordInput}" 
								  property="text" 
								  />
		
		<common:SZStringValidator id="pwdConfirmValidator2" 
								  source="{passwordRepeatInput}" 
								  property="text" 
								  field="{SZStringValidator.PASSWORD}"
								  />
		
		<common:SZPasswordValidator id="accountPwdValidator2" 
								  source="{passwordRepeatInput}" 
								  property="text" 
								  />
		
	</fx:Declarations>
	<s:layout>

		<s:VerticalLayout gap="10"/>

	</s:layout>


	<s:Form width="100%">

		<s:FormItem width="100%"
					label="{DmosFramework.getInstance().SNL('SC_PASSWORD')}">

			<common:SZTextmxInput id="passwordInput"
						 width="100%"
						 maxChars="20"
						 restrict="^ㄱ-힣"
						 change="changePwd_changeHandler(event)"
						 displayAsPassword="true"/>

		</s:FormItem>

		<s:FormItem width="100%"
					label="{DmosFramework.getInstance().SNL('SC_PASSWORD_CHECK')}">

			<common:SZTextmxInput id="passwordRepeatInput"
						 width="100%"
						 maxChars="20"
						 restrict="^ㄱ-힣"
						 change="changePwd_changeHandler(event)"
						 displayAsPassword="true"/>

		</s:FormItem>

	</s:Form>

	<s:controlBarLayout>

		<s:HorizontalLayout horizontalAlign="center"
							verticalAlign="middle"
							gap="5"/>

	</s:controlBarLayout>

	<s:controlBarContent>
		<s:VGroup width="100%" horizontalAlign="left">

			<s:CheckBox id="dataDelete" label="{DmosFramework.getInstance().SNL('SC_DATA_DELETE_DESCRIPTION')}" color="white" width="100%" visible="{SaferZoneVersion>=2?true:false}"
						includeInLayout="{SaferZoneVersion>=2?true:false}"/>

			<s:HGroup width="100%" horizontalAlign="center">
				
				<common:SZButton id="confirmButton"
								 enabled="{isPwdAvailable}"
								 label="{DmosFramework.getInstance().SNL('SC_OK')}"/>
				
				<common:SZButton id="cancelButton"
								 label="{DmosFramework.getInstance().SNL('SC_CANCEL')}"/>
				
			</s:HGroup>
			
		</s:VGroup>
	</s:controlBarContent>	
	

</s:TitleWindow>
